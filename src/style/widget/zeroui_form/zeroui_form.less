@import "../../base/fn";

.zeroui_form {
    input, textarea {        // 高亮色是白色,和背景色相同,相当于没有效果
        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    }
}

.zeroui_form_input {
    outline: 0;             // 去掉外框
    -webkit-appearance: none;   // 禁用原生效果
    background-color: transparent;

    // hides the spin-button
    &::-webkit-outer-spin-button, &::-webkit-inner-spin-button{             // spin-button 是浏览器给input框加上的原生样式,如`type=number`会加上上下加减按钮, 我们需要禁用。
        -webkit-appearance: none;
        margin: 0;
    }

    width: 100%;            // 输入框占满整行
    font-size: @zerouiFormInputFontSize; // 按钮字体18px,比body的14px大一些,显得比较突出
    text-align: center;          // 文字居中,如果是a标签,不要text-decoration
    line-height: unit(@zerouiFormInputHeight/@zerouiFormInputFontSize); // 看起来要与按钮一样高, 才显得垂直居中
    border-radius: @zerouiFormInputBorderRadius;                // 20px的圆角


}

.zeroui_form_input_primary {
    color: @zerouiFormInputPrimaryFontColor;
    border: 1px solid #04BE02;
    &::-webkit-input-placeholder { color: @zerouiFormInputPrimaryFontColor; }   // placeholder使用绿色
    &:after {                                           // 给按钮套一层边框, 增加立体效果。  TODO: 为什么不直接用border呢?
        content: " ";

        width: 200%;                                    // 和生成1px的线,用的相同的伎俩。 先设置2倍大小,然后再scale到一半
        height: 200%;
        position: absolute;
        border-radius: @zerouiBtnBorderRadius*2;
        border: 1px solid rgba(0, 0, 0, .2);
        transform: scale(.5);
        transform-origin: 0 0;

        top: 0;
        left: 0;
        box-sizing: border-box;
    }
}

